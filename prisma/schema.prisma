// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Permission {
  id               Int                @id @default(autoincrement())
  codePermission   String             @unique
  namePermission   String             @unique
  group            String
  RoleToPermission RoleToPermission[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
}

model Role {
  id               Int                @id @default(autoincrement())
  codeRole         String             @unique
  nameRole         String             @unique
  RoleToPermission RoleToPermission[]
  Admin            Admin[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
}

model RoleToPermission {
  roleId       Int
  permissionId Int
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@id([roleId, permissionId])
}

model Admin {
  id           Int      @id @default(autoincrement())
  name         String
  matricule    String   @unique
  email        String   @unique
  phone        String   @unique
  password     String
  address      String?
  roleId       Int
  token        String?
  refreshToken String?
  status       String
  role         Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
